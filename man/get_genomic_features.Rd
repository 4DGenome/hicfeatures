% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_genomic_features.R
\name{get_genomic_features}
\alias{get_genomic_features}
\title{Prepare genomic features per genomic bin}
\usage{
get_genomic_features(geno, enz, reso)
}
\arguments{
\item{geno}{A \code{string} encoding a genome assemply. Currently, only \code{hg38}, \code{mm10} and \code{dm3} are supported.}

\item{reso}{A \code{integer} with the desired bin size (a.k.a. resolution).}

\item{geno}{A \code{string} encoding a restriction enzyme. Currently, only \code{BspHI}, \code{DpnII}, \code{HindIII}, \code{HinfI}, \code{MboI}, \code{MspI}, \code{NcoI} and \code{NlaIII} are supported.}
}
\value{
A \code{data.frame} containing 6 variables:
 \describe{
   \item{chr:}{chromosome}
   \item{map:}{mappability as computed by gem}
   \item{res:}{restriction enzyme density per 1 Kbp computed by Biostrings::matchPattern()}
   \item{cg:}{cg content as computed by bedtools}
   \item{bin:}{genomic bin with the format chromosome:start_position}
   \item{pos:}{start postion of the genomic bin}
 }
}
\description{
This function takes a genome, enzyme and resolution and produces a \code{data.frame} with the corresponding genomic features. It's just a wrapper to the \code{data()} contained in the package. In case that the desired resolution is not available in the pre-computed data, it interpolates the genomic features from the nearest larger resolution available.
}
\examples{
plot(0)
}
